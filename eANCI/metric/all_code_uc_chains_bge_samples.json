{
    "fp": [
        {
            "ServletRegistraCittadino": "- citizen registration, allow citizen to register into the system, citizen. citizen accesses registration form, system displays data entry fields (name, surname, email, identity card number, tax code, login, password), citizen submits form, system checks identity card existence and login availability, system validates data consistency with existing records, system confirms registration, exit conditions include successful registration or error due to existing login or invalid identity card, identity card number must exist in system, login must be unique with [a-za-z0-9._-] characters under 30 length, personal data must match identity card records.\n- identity card validation, verify citizen's identity document during registration, citizen. system checks identity card number against municipal database, system confirms document validity, exit when validation succeeds or fails, extends citizen registration use case, identity card number must be registered in municipality database.\n- login uniqueness check, ensure citizen's login credentials are unique, citizen. system verifies login availability during registration, system blocks duplicate logins, exit when login availability confirmed or denied, extends citizen registration use case, login must not exist in system before registration.\n- personal data consistency, validate citizen's input against official records, citizen. system compares entered name/surname/tax code with identity card database, system rejects mismatched information, exit when data matches or shows inconsistency error, extends citizen registration use case, tax code must correspond to identity card holder's data.",
            "EA22": "register citizen, allow citizen to register in the system, citizen. citizen accesses registration form, system displays registration form, citizen enters data and confirms, system verifies data correctness, saves data and sends registration email to citizen, entry condition: citizen has accessed the system, exit conditions: system registers citizen or invalid data invoking invalid data use case or service unavailable invoking service unavailable use case, quality requirements: name string matches identity card holder's name with [a-za-z'àéèìòù], length <30, not empty, surname string matches identity card holder's surname with [a-za-z'àéèìòù], length <30, not empty, fiscal code string complies with regulations and 16 characters, identity card string exists in system as xxnnnnnnn format (9 characters), email string follows x@x.x format, length <31, not empty, username not existing in system, contains [a-za-z0-9.-_], length <30, not empty, password contains [a-za-z0-9.-_*+!?,:;àèéìòù], length 8-15.",
            "score": 0.92333984375,
            "correct": false
        },
        {
            "ServletRegistraCittadino": "- citizen registration, allow citizen to register into the system, citizen. citizen accesses registration form, system displays data entry fields (name, surname, email, identity card number, tax code, login, password), citizen submits form, system checks identity card existence and login availability, system validates data consistency with existing records, system confirms registration, exit conditions include successful registration or error due to existing login or invalid identity card, identity card number must exist in system, login must be unique with [a-za-z0-9._-] characters under 30 length, personal data must match identity card records.\n- identity card validation, verify citizen's identity document during registration, citizen. system checks identity card number against municipal database, system confirms document validity, exit when validation succeeds or fails, extends citizen registration use case, identity card number must be registered in municipality database.\n- login uniqueness check, ensure citizen's login credentials are unique, citizen. system verifies login availability during registration, system blocks duplicate logins, exit when login availability confirmed or denied, extends citizen registration use case, login must not exist in system before registration.\n- personal data consistency, validate citizen's input against official records, citizen. system compares entered name/surname/tax code with identity card database, system rejects mismatched information, exit when data matches or shows inconsistency error, extends citizen registration use case, tax code must correspond to identity card holder's data.",
            "EA23": "register citizen, allow citizen to register in the system, citizen. citizen accesses registration form, system displays form, citizen enters data and confirms, system verifies data correctness, saves data and sends registration email, handle invalid data by invoking invalid data use case, handle service unavailable by invoking service unavailable use case, citizen must have system access. name string matches identity card holder, well-formed with [a-za-z'àéèìòù], length <30, not empty. surname string matches identity card holder, well-formed with [a-za-z'àéèìòù], length <30, not empty. fiscal code string complies with regulations, 16 characters. identity card string exists in system, format xxnnnnnnn, 9 characters. email string format x@x.x, length <31, not empty. username string unique, well-formed with [a-za-z0-9.-_], length <30, not empty. password string well-formed with [a-za-z0-9.-_*+!?,:;àèéìòù], length 8-15.",
            "score": 0.9091796875,
            "correct": false
        },
        {
            "ServletRegistraCittadino": "- citizen registration, allow citizen to register into the system, citizen. citizen accesses registration form, system displays data entry fields (name, surname, email, identity card number, tax code, login, password), citizen submits form, system checks identity card existence and login availability, system validates data consistency with existing records, system confirms registration, exit conditions include successful registration or error due to existing login or invalid identity card, identity card number must exist in system, login must be unique with [a-za-z0-9._-] characters under 30 length, personal data must match identity card records.\n- identity card validation, verify citizen's identity document during registration, citizen. system checks identity card number against municipal database, system confirms document validity, exit when validation succeeds or fails, extends citizen registration use case, identity card number must be registered in municipality database.\n- login uniqueness check, ensure citizen's login credentials are unique, citizen. system verifies login availability during registration, system blocks duplicate logins, exit when login availability confirmed or denied, extends citizen registration use case, login must not exist in system before registration.\n- personal data consistency, validate citizen's input against official records, citizen. system compares entered name/surname/tax code with identity card database, system rejects mismatched information, exit when data matches or shows inconsistency error, extends citizen registration use case, tax code must correspond to identity card holder's data.",
            "EA6": "insert citizen, allow employee to insert a new citizen, employee. employee accesses system and activates registration procedure, system displays insert form, employee enters citizen data and submits, system receives form and checks for existing citizen, exit conditions include system registers employee or existing id invokes incorrect data use case or service unavailable invokes service unavailable use case, employee must be authenticated, name must contain [a-za-z ' àéèìòù] under 30 chars, surname same, fiscal code 16 chars valid, birth date valid dd/mm/yyyy format, birth place same as name, email valid x@x.x format, family unit id numeric and present in system greater than 0.",
            "score": 0.865234375,
            "correct": false
        },
        {
            "CittadinoManager": "- register citizen, allow citizen to register in the system, citizen. citizen accesses registration form, system displays input fields for personal data, citizen enters details and submits, system saves citizen information, exit conditions include successful registration or invalid data invoking error handling, login must be unique and follow [a-za-z0-9.-_] format, email must be valid format.  \n- modify citizen login, allow citizen to update their login credentials, citizen. citizen accesses profile settings, system displays login modification form, citizen enters new login and confirms, system updates login information, citizen must exist in the system, exit includes successful update or error if login already exists.  \n- modify citizen email, allow citizen to change their email address, citizen. citizen navigates to email settings, system displays email update form, citizen enters new email and submits, system validates and saves new email, exit when email updated or invalid format error occurs.  \n- search citizen, allow employee to find citizens by name and surname, employee. employee enters search criteria (name and/or surname), system retrieves matching citizens, employee views results list, exit when results displayed or no matches found.  \n- delete citizen record, allow administrator to remove citizen from system, administrator. administrator selects citizen record, confirms deletion request, system permanently removes citizen data, citizen must exist in the system prior to deletion.  \n- update family unit, allow employee to modify citizen's family unit association, employee. employee selects citizen and new family unit, system updates family unit linkage, exit when association changed or invalid unit error occurs.  \n- modify citizen name, allow citizen to update their legal name, citizen. citizen accesses name change form, enters new name and submits, system validates and updates record, name must contain only [a-zàèéìòù] characters with 1-30 length.  \n- modify citizen surname, allow citizen to update their legal surname, citizen. citizen accesses surname modification form, enters new surname and confirms, system validates and saves changes, surname follows same format constraints as name.",
            "EA23": "register citizen, allow citizen to register in the system, citizen. citizen accesses registration form, system displays form, citizen enters data and confirms, system verifies data correctness, saves data and sends registration email, handle invalid data by invoking invalid data use case, handle service unavailable by invoking service unavailable use case, citizen must have system access. name string matches identity card holder, well-formed with [a-za-z'àéèìòù], length <30, not empty. surname string matches identity card holder, well-formed with [a-za-z'àéèìòù], length <30, not empty. fiscal code string complies with regulations, 16 characters. identity card string exists in system, format xxnnnnnnn, 9 characters. email string format x@x.x, length <31, not empty. username string unique, well-formed with [a-za-z0-9.-_], length <30, not empty. password string well-formed with [a-za-z0-9.-_*+!?,:;àèéìòù], length 8-15.",
            "score": 0.861328125,
            "correct": false
        },
        {
            "Cittadino": "- citizen registration, allow citizen to register in the system, citizen. citizen accesses registration form, system displays personal data entry fields (tax code, surname, name, birth date, birth place, email), citizen submits data, system stores citizen profile, citizen must provide valid tax code and birth details, exit conditions include successful registration or invalid data invoking error handling.  \n- update citizen profile, allow citizen to modify personal information, citizen. citizen accesses profile management, system displays editable fields (email, communication preferences), citizen updates data and confirms, system saves changes, citizen must be authenticated, exit conditions include profile updated or service unavailable error.  \n- manage family unit association, allow citizen to link to family unit, citizen. citizen accesses family unit section, system displays current association or input form, citizen enters family unit identifier, system validates and links citizen, exit conditions include successful linkage or invalid family unit invoking error handling.  \n- communication preference management, allow citizen to set advertisement subscription, citizen. citizen accesses settings, system displays subscription toggle, citizen enables/disables preference, system updates subscription status, exit conditions include preference saved or service error.",
            "EA23": "register citizen, allow citizen to register in the system, citizen. citizen accesses registration form, system displays form, citizen enters data and confirms, system verifies data correctness, saves data and sends registration email, handle invalid data by invoking invalid data use case, handle service unavailable by invoking service unavailable use case, citizen must have system access. name string matches identity card holder, well-formed with [a-za-z'àéèìòù], length <30, not empty. surname string matches identity card holder, well-formed with [a-za-z'àéèìòù], length <30, not empty. fiscal code string complies with regulations, 16 characters. identity card string exists in system, format xxnnnnnnn, 9 characters. email string format x@x.x, length <31, not empty. username string unique, well-formed with [a-za-z0-9.-_], length <30, not empty. password string well-formed with [a-za-z0-9.-_*+!?,:;àèéìòù], length 8-15.",
            "score": 0.85693359375,
            "correct": false
        },
        {
            "ServletCaricaPratica": "- load application data, allow employee to access citizen and identity card information for application processing, employee. employee selects citizen application from list, system retrieves citizen data and identity card details, system displays application form with pre-filled data, employee must have valid access permissions, citizen must exist in system with valid identity card.",
            "EA31": "accept identity card request, allow employee to process and confirm citizen's identity card request, employee, citizen. employee views notification, system displays identity card creation request, employee certifies request validity by checking data accuracy and enables creation procedure, system sends confirmation email to citizen, citizen goes to counter, extends request identity card use case when employee confirms citizen's request, system notifies citizen as exit condition, employee must be authenticated in the system.",
            "score": 0.85400390625,
            "correct": false
        },
        {
            "ServletModificaImpiegato": "- modify employee personal information, allow administrator to update employee's personal details, administrator. administrator accesses employee modification form, system displays employee search by id, administrator enters valid employee id and submits, system retrieves employee data and displays edit form, administrator modifies details (name, surname, email) and confirms, system saves updated information, administrator must be authenticated, exit conditions include successful update or error if invalid employee id.  \n- update employee access credentials, allow administrator to change employee's login credentials, administrator. administrator selects employee via valid id search, system displays current login/password fields, administrator enters new credentials and confirms, system verifies format and updates records, exit when credentials modified or error if password violates length/special character rules.  \n- employee search by id, enable administrator to locate employee records, administrator. administrator initiates employee modification process, system requires valid employee id input, administrator enters id and submits search, system verifies id existence and retrieves data, invalid id triggers error notification.  \n- handle modification errors, manage database exceptions during employee updates, administrator. system detects database errors during save operation, displays service unavailable message, administrator returns to employee management dashboard, extends modification use cases with error recovery path.",
            "EA78": "modify information, allow employee to modify a news information, employee. employee requests news modification, system displays existing news list, employee selects news, system displays edit form, employee enters news data in form, system receives form and updates news data, handle errors by invoking service unavailable use case, employee must be authenticated in the system.",
            "score": 0.85205078125,
            "correct": false
        },
        {
            "ServletModificaCittadino": "- modify citizen data, allow employee to update citizen's personal information, employee. employee accesses citizen modification form, system displays current citizen data, employee enters new details (name, surname, email), system validates and updates records, employee must authenticate and have valid citizen identity card code, exit conditions include successful update or error if identity code invalid or database error.\n- change family unit, allow employee to modify citizen's family unit membership, employee. employee selects new family unit for citizen, system checks unit existence and updates member count, system assigns citizen to selected unit, employee must ensure new family unit exists and citizen is not current family head with multiple members, exit on successful reassignment or error if unit invalid.\n- update family head, allow employee to designate new family head when current head changes unit, employee. employee enters new head's identity card code, system verifies code exists and updates family unit head, previous head's unit member count decreases, new unit count increases, exit on success or error if new head's identity code invalid.",
            "EA6": "insert citizen, allow employee to insert a new citizen, employee. employee accesses system and activates registration procedure, system displays insert form, employee enters citizen data and submits, system receives form and checks for existing citizen, exit conditions include system registers employee or existing id invokes incorrect data use case or service unavailable invokes service unavailable use case, employee must be authenticated, name must contain [a-za-z ' àéèìòù] under 30 chars, surname same, fiscal code 16 chars valid, birth date valid dd/mm/yyyy format, birth place same as name, email valid x@x.x format, family unit id numeric and present in system greater than 0.",
            "score": 0.84912109375,
            "correct": false
        },
        {
            "ServletCaricaPratica": "- load application data, allow employee to access citizen and identity card information for application processing, employee. employee selects citizen application from list, system retrieves citizen data and identity card details, system displays application form with pre-filled data, employee must have valid access permissions, citizen must exist in system with valid identity card.",
            "EA30": "request identity card, allow citizen to request an identity card and employee to process it, citizen, employee. citizen views family status and selects family member, system displays form for personal data input (height, distinctive features etc.), citizen enters data, selects payment method, confirms, system shows documentation to present at office counter during opening hours, citizen confirms, system notifies employee of request, employee receives application and chooses to accept or reject invoking request identity card rejected or request identity card accepted use cases, handle service unavailable by invoking service unavailable use case, citizen must be authenticated in the system and exercise parental authority over subject.",
            "score": 0.84619140625,
            "correct": false
        },
        {
            "ServletModificaAccesso": "- modify access credentials, allow citizen to update login and password, citizen. citizen accesses credentials modification form, system displays login and password fields, citizen enters new data and confirms, system updates credentials, exit conditions include successful update or error invoking invalid data use case, password must match confirmation field and comply with length/special character rules.  \n- modify employee access, allow employee to change login credentials, employee. employee accesses modification form, system displays current login and password fields, employee enters new data and submits, system verifies and updates credentials, employee must have active session, exit conditions include success or invalid data error if password mismatch or invalid format.  \n- handle session expiration, redirect unauthenticated users to login page, system. system detects expired or invalid session during access modification, redirects user to appropriate login page based on origin (citizen/employee portal), exit when user reaches login screen.",
            "EA11": "modify citizen, allow employee to modify a citizen's information, employee. employee presses modify citizen button, system displays edit form, employee enters data, system saves changes, handle service unavailable by invoking service unavailable use case, system modifies citizen or service unavailable as exit conditions, employee must be authenticated in the system and use case includes search citizen when modifying.",
            "score": 0.84228515625,
            "correct": false
        },
        {
            "ServletRegistraCittadino": "- citizen registration, allow citizen to register into the system, citizen. citizen accesses registration form, system displays data entry fields (name, surname, email, identity card number, tax code, login, password), citizen submits form, system checks identity card existence and login availability, system validates data consistency with existing records, system confirms registration, exit conditions include successful registration or error due to existing login or invalid identity card, identity card number must exist in system, login must be unique with [a-za-z0-9._-] characters under 30 length, personal data must match identity card records.\n- identity card validation, verify citizen's identity document during registration, citizen. system checks identity card number against municipal database, system confirms document validity, exit when validation succeeds or fails, extends citizen registration use case, identity card number must be registered in municipality database.\n- login uniqueness check, ensure citizen's login credentials are unique, citizen. system verifies login availability during registration, system blocks duplicate logins, exit when login availability confirmed or denied, extends citizen registration use case, login must not exist in system before registration.\n- personal data consistency, validate citizen's input against official records, citizen. system compares entered name/surname/tax code with identity card database, system rejects mismatched information, exit when data matches or shows inconsistency error, extends citizen registration use case, tax code must correspond to identity card holder's data.",
            "EA2": "authenticate citizen, allow citizen to log in handling incorrect data and service unavailability, citizen. citizen accesses authentication session, system displays login form, citizen enters credentials and submits, system verifies and grants access, handle incorrect data by invoking incorrect data use case, handle service unavailable by invoking service unavailable use case, username must exist in system with [a-za-z0-9.-_] characters and length <30, password must exist in system with [a-za-z0-9.-_*+!?,:;àèéìòù] characters and length 8-15.",
            "score": 0.83984375,
            "correct": false
        }
    ],
    "fn": [
        {
            "ServletEliminaCittadino": "- delete citizen, allow employee to delete a citizen from the system, employee. employee enters citizen's identity card code, system verifies code existence and retrieves citizen data, employee confirms deletion, system removes citizen and associated access, if citizen is family unit head and family has members, employee must specify new head via identity card code, system updates family unit and deletes citizen, employee must be authenticated, exit conditions include successful deletion or error if identity card code invalid or service unavailable.  \n- replace family unit head, allow employee to assign new head when deleting current head, employee. system detects citizen being deleted is family unit head with multiple members, prompts employee to enter new head's identity card code, employee enters valid code, system updates family unit head, employee must provide valid identity card code for existing family member.  \n- incorrect data, handle invalid identity card code during deletion, employee. system displays error if entered identity card code does not exist, employee re-enters code or cancels operation, exit when error message displayed or valid code provided, extends delete citizen use case.",
            "EA4": "delete citizen, allows employee to delete a citizen, employee. employee presses delete citizen button, system requests confirmation, employee confirms operation, system deletes citizen. employee must be authenticated in the system, includes search citizen use case when employee wants to delete citizen. exit conditions: employee does not confirm operation, system deletes citizen, or invokes service unavailable use case if service is unavailable.",
            "score": 0.90283203125,
            "correct": true
        },
        {
            "ServletModificaCittadino": "- modify citizen data, allow employee to update citizen's personal information, employee. employee accesses citizen modification form, system displays current citizen data, employee enters new details (name, surname, email), system validates and updates records, employee must authenticate and have valid citizen identity card code, exit conditions include successful update or error if identity code invalid or database error.\n- change family unit, allow employee to modify citizen's family unit membership, employee. employee selects new family unit for citizen, system checks unit existence and updates member count, system assigns citizen to selected unit, employee must ensure new family unit exists and citizen is not current family head with multiple members, exit on successful reassignment or error if unit invalid.\n- update family head, allow employee to designate new family head when current head changes unit, employee. employee enters new head's identity card code, system verifies code exists and updates family unit head, previous head's unit member count decreases, new unit count increases, exit on success or error if new head's identity code invalid.",
            "EA11": "modify citizen, allow employee to modify a citizen's information, employee. employee presses modify citizen button, system displays edit form, employee enters data, system saves changes, handle service unavailable by invoking service unavailable use case, system modifies citizen or service unavailable as exit conditions, employee must be authenticated in the system and use case includes search citizen when modifying.",
            "score": 0.90283203125,
            "correct": true
        },
        {
            "CittadinoManager": "- register citizen, allow citizen to register in the system, citizen. citizen accesses registration form, system displays input fields for personal data, citizen enters details and submits, system saves citizen information, exit conditions include successful registration or invalid data invoking error handling, login must be unique and follow [a-za-z0-9.-_] format, email must be valid format.  \n- modify citizen login, allow citizen to update their login credentials, citizen. citizen accesses profile settings, system displays login modification form, citizen enters new login and confirms, system updates login information, citizen must exist in the system, exit includes successful update or error if login already exists.  \n- modify citizen email, allow citizen to change their email address, citizen. citizen navigates to email settings, system displays email update form, citizen enters new email and submits, system validates and saves new email, exit when email updated or invalid format error occurs.  \n- search citizen, allow employee to find citizens by name and surname, employee. employee enters search criteria (name and/or surname), system retrieves matching citizens, employee views results list, exit when results displayed or no matches found.  \n- delete citizen record, allow administrator to remove citizen from system, administrator. administrator selects citizen record, confirms deletion request, system permanently removes citizen data, citizen must exist in the system prior to deletion.  \n- update family unit, allow employee to modify citizen's family unit association, employee. employee selects citizen and new family unit, system updates family unit linkage, exit when association changed or invalid unit error occurs.  \n- modify citizen name, allow citizen to update their legal name, citizen. citizen accesses name change form, enters new name and submits, system validates and updates record, name must contain only [a-zàèéìòù] characters with 1-30 length.  \n- modify citizen surname, allow citizen to update their legal surname, citizen. citizen accesses surname modification form, enters new surname and confirms, system validates and saves changes, surname follows same format constraints as name.",
            "EA11": "modify citizen, allow employee to modify a citizen's information, employee. employee presses modify citizen button, system displays edit form, employee enters data, system saves changes, handle service unavailable by invoking service unavailable use case, system modifies citizen or service unavailable as exit conditions, employee must be authenticated in the system and use case includes search citizen when modifying.",
            "score": 0.87744140625,
            "correct": true
        },
        {
            "CittadinoManager": "- register citizen, allow citizen to register in the system, citizen. citizen accesses registration form, system displays input fields for personal data, citizen enters details and submits, system saves citizen information, exit conditions include successful registration or invalid data invoking error handling, login must be unique and follow [a-za-z0-9.-_] format, email must be valid format.  \n- modify citizen login, allow citizen to update their login credentials, citizen. citizen accesses profile settings, system displays login modification form, citizen enters new login and confirms, system updates login information, citizen must exist in the system, exit includes successful update or error if login already exists.  \n- modify citizen email, allow citizen to change their email address, citizen. citizen navigates to email settings, system displays email update form, citizen enters new email and submits, system validates and saves new email, exit when email updated or invalid format error occurs.  \n- search citizen, allow employee to find citizens by name and surname, employee. employee enters search criteria (name and/or surname), system retrieves matching citizens, employee views results list, exit when results displayed or no matches found.  \n- delete citizen record, allow administrator to remove citizen from system, administrator. administrator selects citizen record, confirms deletion request, system permanently removes citizen data, citizen must exist in the system prior to deletion.  \n- update family unit, allow employee to modify citizen's family unit association, employee. employee selects citizen and new family unit, system updates family unit linkage, exit when association changed or invalid unit error occurs.  \n- modify citizen name, allow citizen to update their legal name, citizen. citizen accesses name change form, enters new name and submits, system validates and updates record, name must contain only [a-zàèéìòù] characters with 1-30 length.  \n- modify citizen surname, allow citizen to update their legal surname, citizen. citizen accesses surname modification form, enters new surname and confirms, system validates and saves changes, surname follows same format constraints as name.",
            "EA22": "register citizen, allow citizen to register in the system, citizen. citizen accesses registration form, system displays registration form, citizen enters data and confirms, system verifies data correctness, saves data and sends registration email to citizen, entry condition: citizen has accessed the system, exit conditions: system registers citizen or invalid data invoking invalid data use case or service unavailable invoking service unavailable use case, quality requirements: name string matches identity card holder's name with [a-za-z'àéèìòù], length <30, not empty, surname string matches identity card holder's surname with [a-za-z'àéèìòù], length <30, not empty, fiscal code string complies with regulations and 16 characters, identity card string exists in system as xxnnnnnnn format (9 characters), email string follows x@x.x format, length <31, not empty, username not existing in system, contains [a-za-z0-9.-_], length <30, not empty, password contains [a-za-z0-9.-_*+!?,:;àèéìòù], length 8-15.",
            "score": 0.875,
            "correct": true
        },
        {
            "Cittadino": "- citizen registration, allow citizen to register in the system, citizen. citizen accesses registration form, system displays personal data entry fields (tax code, surname, name, birth date, birth place, email), citizen submits data, system stores citizen profile, citizen must provide valid tax code and birth details, exit conditions include successful registration or invalid data invoking error handling.  \n- update citizen profile, allow citizen to modify personal information, citizen. citizen accesses profile management, system displays editable fields (email, communication preferences), citizen updates data and confirms, system saves changes, citizen must be authenticated, exit conditions include profile updated or service unavailable error.  \n- manage family unit association, allow citizen to link to family unit, citizen. citizen accesses family unit section, system displays current association or input form, citizen enters family unit identifier, system validates and links citizen, exit conditions include successful linkage or invalid family unit invoking error handling.  \n- communication preference management, allow citizen to set advertisement subscription, citizen. citizen accesses settings, system displays subscription toggle, citizen enables/disables preference, system updates subscription status, exit conditions include preference saved or service error.",
            "EA11": "modify citizen, allow employee to modify a citizen's information, employee. employee presses modify citizen button, system displays edit form, employee enters data, system saves changes, handle service unavailable by invoking service unavailable use case, system modifies citizen or service unavailable as exit conditions, employee must be authenticated in the system and use case includes search citizen when modifying.",
            "score": 0.87109375,
            "correct": true
        },
        {
            "ServletModificaAccesso": "- modify access credentials, allow citizen to update login and password, citizen. citizen accesses credentials modification form, system displays login and password fields, citizen enters new data and confirms, system updates credentials, exit conditions include successful update or error invoking invalid data use case, password must match confirmation field and comply with length/special character rules.  \n- modify employee access, allow employee to change login credentials, employee. employee accesses modification form, system displays current login and password fields, employee enters new data and submits, system verifies and updates credentials, employee must have active session, exit conditions include success or invalid data error if password mismatch or invalid format.  \n- handle session expiration, redirect unauthenticated users to login page, system. system detects expired or invalid session during access modification, redirects user to appropriate login page based on origin (citizen/employee portal), exit when user reaches login screen.",
            "EA17": "modify citizen password, allow citizen to modify their password, citizen. citizen presses modify password button, system displays form for entering old and new password, citizen enters old and new password and confirms, system notifies password modified, citizen must be authenticated in the system, exit conditions include password modified, invalid data use case invoked if password under 8 characters or old password incorrect, service unavailable use case invoked if service down, password must be 8-15 characters from [a-za-z0-9.-_*+!?,:;àèéòù], new password cannot match old.",
            "score": 0.8701171875,
            "correct": true
        },
        {
            "CittadinoManager": "- register citizen, allow citizen to register in the system, citizen. citizen accesses registration form, system displays input fields for personal data, citizen enters details and submits, system saves citizen information, exit conditions include successful registration or invalid data invoking error handling, login must be unique and follow [a-za-z0-9.-_] format, email must be valid format.  \n- modify citizen login, allow citizen to update their login credentials, citizen. citizen accesses profile settings, system displays login modification form, citizen enters new login and confirms, system updates login information, citizen must exist in the system, exit includes successful update or error if login already exists.  \n- modify citizen email, allow citizen to change their email address, citizen. citizen navigates to email settings, system displays email update form, citizen enters new email and submits, system validates and saves new email, exit when email updated or invalid format error occurs.  \n- search citizen, allow employee to find citizens by name and surname, employee. employee enters search criteria (name and/or surname), system retrieves matching citizens, employee views results list, exit when results displayed or no matches found.  \n- delete citizen record, allow administrator to remove citizen from system, administrator. administrator selects citizen record, confirms deletion request, system permanently removes citizen data, citizen must exist in the system prior to deletion.  \n- update family unit, allow employee to modify citizen's family unit association, employee. employee selects citizen and new family unit, system updates family unit linkage, exit when association changed or invalid unit error occurs.  \n- modify citizen name, allow citizen to update their legal name, citizen. citizen accesses name change form, enters new name and submits, system validates and updates record, name must contain only [a-zàèéìòù] characters with 1-30 length.  \n- modify citizen surname, allow citizen to update their legal surname, citizen. citizen accesses surname modification form, enters new surname and confirms, system validates and saves changes, surname follows same format constraints as name.",
            "EA13": "modify citizen email, allow citizen to modify their email, citizen. citizen accesses email modification form, system displays form for new email entry, citizen enters new email and presses confirm button, system updates email, system saves new email or detects error invoking invalid data use case or handles service unavailable via service unavailable use case, citizen must be authenticated in the system.",
            "score": 0.86474609375,
            "correct": true
        },
        {
            "Cittadino": "- citizen registration, allow citizen to register in the system, citizen. citizen accesses registration form, system displays personal data entry fields (tax code, surname, name, birth date, birth place, email), citizen submits data, system stores citizen profile, citizen must provide valid tax code and birth details, exit conditions include successful registration or invalid data invoking error handling.  \n- update citizen profile, allow citizen to modify personal information, citizen. citizen accesses profile management, system displays editable fields (email, communication preferences), citizen updates data and confirms, system saves changes, citizen must be authenticated, exit conditions include profile updated or service unavailable error.  \n- manage family unit association, allow citizen to link to family unit, citizen. citizen accesses family unit section, system displays current association or input form, citizen enters family unit identifier, system validates and links citizen, exit conditions include successful linkage or invalid family unit invoking error handling.  \n- communication preference management, allow citizen to set advertisement subscription, citizen. citizen accesses settings, system displays subscription toggle, citizen enables/disables preference, system updates subscription status, exit conditions include preference saved or service error.",
            "EA13": "modify citizen email, allow citizen to modify their email, citizen. citizen accesses email modification form, system displays form for new email entry, citizen enters new email and presses confirm button, system updates email, system saves new email or detects error invoking invalid data use case or handles service unavailable via service unavailable use case, citizen must be authenticated in the system.",
            "score": 0.8642578125,
            "correct": true
        },
        {
            "CartaIdentita": "- create identity card, allow employee to create a new identity card for a citizen, employee. employee accesses identity card creation form, system displays required fields (citizenship, residence, profession), employee enters citizen data and submits, system validates and stores the identity card, employee must have valid access permissions, exit conditions include successful card creation or error handling for invalid data, citizenship must be a valid nation name, residence must match municipal records, profession must adhere to predefined categories.  \n- update identity card details, allow employee to modify existing identity card information, employee. employee selects citizen's identity card, system displays current details, employee edits fields (address, marital status, profession), system validates changes and updates record, exit conditions include successful update or error for invalid modifications, street number must be positive integer, height must be in meters with two decimal places.  \n- view identity card, allow citizen to view their identity card details, citizen. citizen accesses personal profile, system retrieves and displays identity card information (expiry date, distinctive marks), citizen reviews data, exit when citizen closes the view, citizen must be authenticated and have a valid identity card record.  \n- validate expatriation authorization, allow employee to set expatriation validity on identity card, employee. employee selects expatriation validity field during card creation/modification, system toggles authorization status, system enforces legal compliance checks, exit when authorization is saved, validity depends on citizenship and residency status.",
            "EA41": "view application, allow citizen to view their applications, citizen. citizen clicks view applications button (identity card, change of residence), system displays screen with citizen's applications, exit conditions include viewing screen or invoking delete application when deleting or invoking modify application when modifying or invoking service unavailable use case, citizen must be authenticated in the system.",
            "score": 0.8603515625,
            "correct": true
        },
        {
            "ServletModificaCittadino": "- modify citizen data, allow employee to update citizen's personal information, employee. employee accesses citizen modification form, system displays current citizen data, employee enters new details (name, surname, email), system validates and updates records, employee must authenticate and have valid citizen identity card code, exit conditions include successful update or error if identity code invalid or database error.\n- change family unit, allow employee to modify citizen's family unit membership, employee. employee selects new family unit for citizen, system checks unit existence and updates member count, system assigns citizen to selected unit, employee must ensure new family unit exists and citizen is not current family head with multiple members, exit on successful reassignment or error if unit invalid.\n- update family head, allow employee to designate new family head when current head changes unit, employee. employee enters new head's identity card code, system verifies code exists and updates family unit head, previous head's unit member count decreases, new unit count increases, exit on success or error if new head's identity code invalid.",
            "EA13": "modify citizen email, allow citizen to modify their email, citizen. citizen accesses email modification form, system displays form for new email entry, citizen enters new email and presses confirm button, system updates email, system saves new email or detects error invoking invalid data use case or handles service unavailable via service unavailable use case, citizen must be authenticated in the system.",
            "score": 0.8583984375,
            "correct": true
        },
        {
            "CittadinoManager": "- register citizen, allow citizen to register in the system, citizen. citizen accesses registration form, system displays input fields for personal data, citizen enters details and submits, system saves citizen information, exit conditions include successful registration or invalid data invoking error handling, login must be unique and follow [a-za-z0-9.-_] format, email must be valid format.  \n- modify citizen login, allow citizen to update their login credentials, citizen. citizen accesses profile settings, system displays login modification form, citizen enters new login and confirms, system updates login information, citizen must exist in the system, exit includes successful update or error if login already exists.  \n- modify citizen email, allow citizen to change their email address, citizen. citizen navigates to email settings, system displays email update form, citizen enters new email and submits, system validates and saves new email, exit when email updated or invalid format error occurs.  \n- search citizen, allow employee to find citizens by name and surname, employee. employee enters search criteria (name and/or surname), system retrieves matching citizens, employee views results list, exit when results displayed or no matches found.  \n- delete citizen record, allow administrator to remove citizen from system, administrator. administrator selects citizen record, confirms deletion request, system permanently removes citizen data, citizen must exist in the system prior to deletion.  \n- update family unit, allow employee to modify citizen's family unit association, employee. employee selects citizen and new family unit, system updates family unit linkage, exit when association changed or invalid unit error occurs.  \n- modify citizen name, allow citizen to update their legal name, citizen. citizen accesses name change form, enters new name and submits, system validates and updates record, name must contain only [a-zàèéìòù] characters with 1-30 length.  \n- modify citizen surname, allow citizen to update their legal surname, citizen. citizen accesses surname modification form, enters new surname and confirms, system validates and saves changes, surname follows same format constraints as name.",
            "EA29": "modify application, allow citizen to modify an application if not initialized, citizen. citizen presses modify application button (identity card, change of residence), system displays application modification form, citizen enters data, system saves changes, citizen must be authenticated in the system, extends view application use case when citizen wants to modify application, system modifies application or handles service unavailable by invoking service unavailable use case.",
            "score": 0.85693359375,
            "correct": true
        },
        {
            "Cittadino": "- citizen registration, allow citizen to register in the system, citizen. citizen accesses registration form, system displays personal data entry fields (tax code, surname, name, birth date, birth place, email), citizen submits data, system stores citizen profile, citizen must provide valid tax code and birth details, exit conditions include successful registration or invalid data invoking error handling.  \n- update citizen profile, allow citizen to modify personal information, citizen. citizen accesses profile management, system displays editable fields (email, communication preferences), citizen updates data and confirms, system saves changes, citizen must be authenticated, exit conditions include profile updated or service unavailable error.  \n- manage family unit association, allow citizen to link to family unit, citizen. citizen accesses family unit section, system displays current association or input form, citizen enters family unit identifier, system validates and links citizen, exit conditions include successful linkage or invalid family unit invoking error handling.  \n- communication preference management, allow citizen to set advertisement subscription, citizen. citizen accesses settings, system displays subscription toggle, citizen enables/disables preference, system updates subscription status, exit conditions include preference saved or service error.",
            "EA22": "register citizen, allow citizen to register in the system, citizen. citizen accesses registration form, system displays registration form, citizen enters data and confirms, system verifies data correctness, saves data and sends registration email to citizen, entry condition: citizen has accessed the system, exit conditions: system registers citizen or invalid data invoking invalid data use case or service unavailable invoking service unavailable use case, quality requirements: name string matches identity card holder's name with [a-za-z'àéèìòù], length <30, not empty, surname string matches identity card holder's surname with [a-za-z'àéèìòù], length <30, not empty, fiscal code string complies with regulations and 16 characters, identity card string exists in system as xxnnnnnnn format (9 characters), email string follows x@x.x format, length <31, not empty, username not existing in system, contains [a-za-z0-9.-_], length <30, not empty, password contains [a-za-z0-9.-_*+!?,:;àèéìòù], length 8-15.",
            "score": 0.85693359375,
            "correct": true
        },
        {
            "CIManager": "- retrieve identity card by number, allow employee to retrieve citizen's identity card details using card number, employee. employee accesses identity card retrieval function, system prompts for card number input, employee enters number and submits request, system displays identity card data, employee must have system access, exit conditions include system displaying data or invoking invalid data use case if card not found, card number must exist in system and be valid.  \n- retrieve identity card by citizen id, allow employee to retrieve identity card details by citizen identifier, employee. employee selects citizen identifier, system retrieves associated identity card information, employee views identity card data, exit conditions include system displaying data or invoking invalid data use case if citizen id not found, citizen must have valid identity card registered in system.  \n- incorrect data, handle incorrect input exceptions by redisplaying form, citizen. system displays error message indicating incorrect request, citizen reads notification message, system redisplays input form, exit when form is redisplayed, extends other use cases to handle input error failures.",
            "EA31": "accept identity card request, allow employee to process and confirm citizen's identity card request, employee, citizen. employee views notification, system displays identity card creation request, employee certifies request validity by checking data accuracy and enables creation procedure, system sends confirmation email to citizen, citizen goes to counter, extends request identity card use case when employee confirms citizen's request, system notifies citizen as exit condition, employee must be authenticated in the system.",
            "score": 0.85595703125,
            "correct": true
        },
        {
            "Cittadino": "- citizen registration, allow citizen to register in the system, citizen. citizen accesses registration form, system displays personal data entry fields (tax code, surname, name, birth date, birth place, email), citizen submits data, system stores citizen profile, citizen must provide valid tax code and birth details, exit conditions include successful registration or invalid data invoking error handling.  \n- update citizen profile, allow citizen to modify personal information, citizen. citizen accesses profile management, system displays editable fields (email, communication preferences), citizen updates data and confirms, system saves changes, citizen must be authenticated, exit conditions include profile updated or service unavailable error.  \n- manage family unit association, allow citizen to link to family unit, citizen. citizen accesses family unit section, system displays current association or input form, citizen enters family unit identifier, system validates and links citizen, exit conditions include successful linkage or invalid family unit invoking error handling.  \n- communication preference management, allow citizen to set advertisement subscription, citizen. citizen accesses settings, system displays subscription toggle, citizen enables/disables preference, system updates subscription status, exit conditions include preference saved or service error.",
            "EA6": "insert citizen, allow employee to insert a new citizen, employee. employee accesses system and activates registration procedure, system displays insert form, employee enters citizen data and submits, system receives form and checks for existing citizen, exit conditions include system registers employee or existing id invokes incorrect data use case or service unavailable invokes service unavailable use case, employee must be authenticated, name must contain [a-za-z ' àéèìòù] under 30 chars, surname same, fiscal code 16 chars valid, birth date valid dd/mm/yyyy format, birth place same as name, email valid x@x.x format, family unit id numeric and present in system greater than 0.",
            "score": 0.84912109375,
            "correct": true
        },
        {
            "CittadinoManager": "- register citizen, allow citizen to register in the system, citizen. citizen accesses registration form, system displays input fields for personal data, citizen enters details and submits, system saves citizen information, exit conditions include successful registration or invalid data invoking error handling, login must be unique and follow [a-za-z0-9.-_] format, email must be valid format.  \n- modify citizen login, allow citizen to update their login credentials, citizen. citizen accesses profile settings, system displays login modification form, citizen enters new login and confirms, system updates login information, citizen must exist in the system, exit includes successful update or error if login already exists.  \n- modify citizen email, allow citizen to change their email address, citizen. citizen navigates to email settings, system displays email update form, citizen enters new email and submits, system validates and saves new email, exit when email updated or invalid format error occurs.  \n- search citizen, allow employee to find citizens by name and surname, employee. employee enters search criteria (name and/or surname), system retrieves matching citizens, employee views results list, exit when results displayed or no matches found.  \n- delete citizen record, allow administrator to remove citizen from system, administrator. administrator selects citizen record, confirms deletion request, system permanently removes citizen data, citizen must exist in the system prior to deletion.  \n- update family unit, allow employee to modify citizen's family unit association, employee. employee selects citizen and new family unit, system updates family unit linkage, exit when association changed or invalid unit error occurs.  \n- modify citizen name, allow citizen to update their legal name, citizen. citizen accesses name change form, enters new name and submits, system validates and updates record, name must contain only [a-zàèéìòù] characters with 1-30 length.  \n- modify citizen surname, allow citizen to update their legal surname, citizen. citizen accesses surname modification form, enters new surname and confirms, system validates and saves changes, surname follows same format constraints as name.",
            "EA17": "modify citizen password, allow citizen to modify their password, citizen. citizen presses modify password button, system displays form for entering old and new password, citizen enters old and new password and confirms, system notifies password modified, citizen must be authenticated in the system, exit conditions include password modified, invalid data use case invoked if password under 8 characters or old password incorrect, service unavailable use case invoked if service down, password must be 8-15 characters from [a-za-z0-9.-_*+!?,:;àèéòù], new password cannot match old.",
            "score": 0.841796875,
            "correct": true
        },
        {
            "CartaIdentita": "- create identity card, allow employee to create a new identity card for a citizen, employee. employee accesses identity card creation form, system displays required fields (citizenship, residence, profession), employee enters citizen data and submits, system validates and stores the identity card, employee must have valid access permissions, exit conditions include successful card creation or error handling for invalid data, citizenship must be a valid nation name, residence must match municipal records, profession must adhere to predefined categories.  \n- update identity card details, allow employee to modify existing identity card information, employee. employee selects citizen's identity card, system displays current details, employee edits fields (address, marital status, profession), system validates changes and updates record, exit conditions include successful update or error for invalid modifications, street number must be positive integer, height must be in meters with two decimal places.  \n- view identity card, allow citizen to view their identity card details, citizen. citizen accesses personal profile, system retrieves and displays identity card information (expiry date, distinctive marks), citizen reviews data, exit when citizen closes the view, citizen must be authenticated and have a valid identity card record.  \n- validate expatriation authorization, allow employee to set expatriation validity on identity card, employee. employee selects expatriation validity field during card creation/modification, system toggles authorization status, system enforces legal compliance checks, exit when authorization is saved, validity depends on citizenship and residency status.",
            "EA31": "accept identity card request, allow employee to process and confirm citizen's identity card request, employee, citizen. employee views notification, system displays identity card creation request, employee certifies request validity by checking data accuracy and enables creation procedure, system sends confirmation email to citizen, citizen goes to counter, extends request identity card use case when employee confirms citizen's request, system notifies citizen as exit condition, employee must be authenticated in the system.",
            "score": 0.83984375,
            "correct": true
        }
    ]
}