{
    "fp": [
        {
            "ServletRicercaImpiegato": "- search employee, allow administrator to search for employee data, administrator. administrator accesses employee search form, system displays search criteria input, administrator enters employee identifier (matricola), system retrieves employee data, administrator must have valid system access, exit conditions include system displaying employee details or invoking employee not found error if identifier invalid or service unavailable use case if database error occurs, employee identifier must exist and follow valid format.\n- employee not found error, handle invalid employee identifier during search, administrator. system displays error message indicating no employee found, administrator reviews error notification, system returns to search form, exit when error message displayed, extends employee search use case when invalid identifier provided.",
            "EA24": "search employee, allow administrator to search for an employee, administrator. press employee search button, system displays search form, administrator performs search via employee data, system returns searched employee data, employee id string must be present in system containing only numeric characters with 6-digit length, administrator must be authenticated in the system, exit conditions include displaying employee screen, invoking incorrect data use case if employee not found, calling delete employee or modify employee use cases if requested, handling service unavailable via service unavailable use case.",
            "score": 0.9180642366409302,
            "correct": false
        },
        {
            "ServletMostraAccessoA": "- view access information, allow citizen to view their access information, citizen. citizen accesses system, system retrieves access details from database, system displays access information on user interface, exit when citizen views data or error occurs, citizen must be authenticated in the system.",
            "EA79": "view information, allow citizen to view territory information, citizen. citizen requests territory information display, system returns information including libraries, events, museums, promotions, handle service unavailable by invoking service unavailable use case, exit conditions are citizen viewing information or service unavailable, citizen must have logged into the system.",
            "score": 0.8616852819919585,
            "correct": false
        },
        {
            "ServletVisualizzaPratiche": "- view applications, allow employee to view all submitted applications, employee. employee accesses application list, system retrieves and displays list of applications, employee scrolls through list to inspect application details, exit when list is displayed or service unavailable invoking service unavailable use case, employee must have system access.",
            "EA44": "view pending applications employee, allow employee to view pending applications, employee. employee selects view pending requests, system displays list of pending applications, exit conditions include employee selecting request invoking show pending application employee use case, returning to previous screen, or system invoking service unavailable use case for unexpected errors, employee must be logged in.",
            "score": 0.8460775375366212,
            "correct": false
        },
        {
            "Amministratore": "- view administrator profile, allow administrator to view their personal details, administrator. administrator accesses profile section, system displays name, surname, matriculation number, email, and login, administrator reviews information, exit when details are displayed, administrator must be authenticated in the system, email must follow valid format (e.g., user@domain.com), matricola must be unique system-wide.\n- modify administrator email, allow administrator to update their email address, administrator. administrator accesses email modification form, enters new valid email, system updates and confirms change, exit when email is updated or invalid format triggers error, email must comply with standard format and be unique if required.",
            "EA14": "modify employee email, allow employee to modify their email address, employee. employee accesses email modification form, system displays new email input form, employee enters new email and confirms, system updates email, employee must be authenticated in the system, exit conditions include system saving new email, detecting error invoking invalid data use case, or handling service unavailability via service unavailable use case.",
            "score": 0.8387192606925964,
            "correct": false
        },
        {
            "ServletModificaCittadino": "- modify citizen data, allow employee to update citizen's personal information, employee. employee accesses citizen modification form, system displays current citizen data, employee enters new details (name, surname, email), system validates and updates records, employee must authenticate and have valid citizen identity card code, exit conditions include successful update or error if identity code invalid or database error.\n- change family unit, allow employee to modify citizen's family unit membership, employee. employee selects new family unit for citizen, system checks unit existence and updates member count, system assigns citizen to selected unit, employee must ensure new family unit exists and citizen is not current family head with multiple members, exit on successful reassignment or error if unit invalid.\n- update family head, allow employee to designate new family head when current head changes unit, employee. employee enters new head's identity card code, system verifies code exists and updates family unit head, previous head's unit member count decreases, new unit count increases, exit on success or error if new head's identity code invalid.",
            "EA27": "change of family status, allow citizen to request a change in family status continued by employee, citizen employee. citizen presses change family status button, system displays form, citizen enters new family unit data and submits request, system sends request to competent employee, system creates document for competent office or handle service unavailable by invoking service unavailable use case, citizen must be authenticated in the system.",
            "score": 0.8357066571712494,
            "correct": false
        },
        {
            "Richiesta": "- submit request, allow citizen to submit a formal request or application, citizen. citizen selects request type (application, certificate), system displays submission form, citizen enters required data and confirms, system creates request with pending status, citizen must be authenticated in the system, exit conditions include system storing request with generated id or invoking incorrect data use case for invalid input, request type must be valid (application types: identity card, family status, change of residence), date must be in dd/mm/yyyy format.  \n- view request status, allow citizen to check current status of submitted requests, citizen. citizen accesses request tracking section, system displays list of citizen's requests with status (accepted, refused, pending), citizen selects specific request, system shows detailed status information and document link if available, exit when citizen reviews status or service unavailable case invoked, citizen must own the requested application.  \n- process request, allow employee to update request status and attach documents, employee. employee accesses request management interface, system displays pending requests list, employee selects request and reviews data, employee sets new status (accepted/refused) and uploads document if required, system updates request and notifies citizen, employee must have valid permissions, exit conditions include status updated with timestamp or incorrect data case invoked for invalid document format.  \n- cancel request, allow citizen to withdraw pending requests, citizen. citizen views active requests list, citizen selects pending request and chooses cancel option, system confirms cancellation and updates status to withdrawn, exit when request is canceled or service unavailable case invoked, cancellation only allowed if status is pending.",
            "EA86": "request authorizations, allow citizen to request authorizations through certificate release area, citizen, employee. citizen accesses certificate and authorization release area via dedicated link, system displays data entry form, citizen inputs required data, system validates data and shows summary or triggers incorrect data use case, citizen confirms, system displays printable form, system notifies responsible employee, citizen prints form for municipal office submission with stamp and attachments, citizen must be authenticated in the system, exit conditions include system displaying form, sending notification, invoking incorrect data or service unavailable use cases for errors or technical failures.",
            "score": 0.8353346168994904,
            "correct": false
        },
        {
            "CIManager": "- retrieve identity card by number, allow employee to retrieve citizen's identity card details using card number, employee. employee accesses identity card retrieval function, system prompts for card number input, employee enters number and submits request, system displays identity card data, employee must have system access, exit conditions include system displaying data or invoking invalid data use case if card not found, card number must exist in system and be valid.  \n- retrieve identity card by citizen id, allow employee to retrieve identity card details by citizen identifier, employee. employee selects citizen identifier, system retrieves associated identity card information, employee views identity card data, exit conditions include system displaying data or invoking invalid data use case if citizen id not found, citizen must have valid identity card registered in system.  \n- incorrect data, handle incorrect input exceptions by redisplaying form, citizen. system displays error message indicating incorrect request, citizen reads notification message, system redisplays input form, exit when form is redisplayed, extends other use cases to handle input error failures.",
            "EA139": "service unavailable, handle technical failure exceptions by displaying notification messages, citizen. system displays terminal message indicating request cannot be processed, citizen reads notification message, system redisplays input form, use case extends other cases to handle technical failure exceptions, exit when input form is redisplayed.",
            "score": 0.8340359330177307,
            "correct": false
        },
        {
            "ServletLogin": "- administrator authentication, allow administrator to authenticate into the system, administrator. administrator accesses system, system displays login form for credentials input, administrator enters data and submits authentication request, system verifies data and grants access with specified permissions, exit conditions include successful access or invalid credentials invoking invalid data use case or service unavailable invoking service unavailable use case, username must be present with [a-za-z0-9._-] characters under 30 length, password must be present with [a-za-z0-9._-*+!?,:;àèéìòù] characters between 8-15 length.\n- authenticate citizen, allow citizen to log in handling incorrect data and service unavailability, citizen. citizen accesses authentication session, system displays login form, citizen enters credentials and submits, system verifies and grants access, handle incorrect data by invoking incorrect data use case, handle service unavailable by invoking service unavailable use case, username must exist in system with [a-za-z0-9.-_] characters and length <30, password must exist in system with [a-za-z0-9.-_*+!?,:;àèéìòù] characters and length 8-15.\n- employee authentication, allow employee to authenticate into the system, employee. employee accesses authentication session, system displays login form for data entry, employee enters credentials and submits authentication request, system verifies data correctness and grants access, handle incorrect data by invoking incorrect data use case or service unavailable by invoking service unavailable use case, employee must have system access. username must exist, be well-formed with [a-za-z0-9 .-_], length under 30 characters, and not empty. password must exist, be well-formed with [a-za-z0-9.-_*+!?,:;àèéìòù], length between 8-15 characters.\n- incorrect data, handle incorrect input exceptions by redisplaying form, citizen. system displays error message indicating incorrect request, citizen reads notification message, system redisplays input form, exit when form is redisplayed, extends other use cases to handle input error failures.",
            "EA139": "service unavailable, handle technical failure exceptions by displaying notification messages, citizen. system displays terminal message indicating request cannot be processed, citizen reads notification message, system redisplays input form, use case extends other cases to handle technical failure exceptions, exit when input form is redisplayed.",
            "score": 0.8340359330177307,
            "correct": false
        },
        {
            "ServletRisposta": "- change of residence, allow citizen to declare residence change with family unit details, citizen. citizen accesses residence change form, system displays data entry fields for old and new address, family members, and occupancy status, citizen enters data and submits, system generates pdf declaration, citizen must be authenticated, exit conditions include system storing declaration as pending request, invoking incorrect data use case if mandatory fields missing or invalid dates, invoking service unavailable use case if pdf generation fails. surname must be [a-zàéèìòù'] uppercase, name same as surname, birth city same characters, birth date valid dd/mm/yyyy, new address same characters, new municipality same characters, family members require name, surname, birth details, occupancy status must be specified.\n- declare third party occupants, allow citizen to list occupants in new residence, citizen. citizen selects occupied residence option, system displays occupant entry form, citizen enters occupant names and relationships, system includes occupants in declaration, exit conditions include system saving occupant details or invoking incorrect data use case if occupant names invalid, citizen must declare occupancy status as occupied. occupant names must be [a-zàéèìòù'] uppercase, minimum 1 character, relationship must be specified.\n- incorrect data, handle incorrect input exceptions by redisplaying form, citizen. system displays error message indicating incorrect request, citizen reads notification message, system redisplays input form, exit when form is redisplayed, extends other use cases to handle input error failures.",
            "EA139": "service unavailable, handle technical failure exceptions by displaying notification messages, citizen. system displays terminal message indicating request cannot be processed, citizen reads notification message, system redisplays input form, use case extends other cases to handle technical failure exceptions, exit when input form is redisplayed.",
            "score": 0.8340359330177307,
            "correct": false
        },
        {
            "AccessManager": "- register user access, allow administrator to create new system user, administrator. administrator navigates to user registration form, enters login, password, and type, system validates login uniqueness and creates access, exit conditions include access created or duplicate login error, login must be unique and conform to [a-za-z0-9._-] characters under 30 length.  \n- modify user access, allow administrator to update user credentials, administrator. administrator selects user from list, modifies login/password/type fields, system validates new data and updates access record, exit conditions include access modified or invalid format error, new login must follow [a-za-z0-9._-] format.  \n- delete user access, allow administrator to remove user from system, administrator. administrator selects target user, confirms deletion action, system deletes access record, exit conditions include access removed or dependency conflict error preventing deletion.  \n- check login existence, validate login uniqueness during registration, administrator. system verifies proposed login against existing records during user creation, administrator receives availability status, exit condition is unique login confirmed or duplicate error triggered.  \n- retrieve access details, allow administrator to view user access information, administrator. administrator searches user by login, system displays associated access type and credentials, exit condition is details shown or invalid login error.  \n- list all accesses, enable administrator to view registered system users, administrator. administrator requests full access list, system retrieves and displays all logins with types, exit condition is list displayed or empty database message.  \n- verify credentials, authenticate users during login process, user. system compares input login/password with stored access records, grants session upon match, exit conditions include successful login or invalid credentials error.",
            "EA16": "modify administrator password, allow administrator to change their password, administrator. administrator presses password modification button, system displays old password entry form, administrator enters old and new password then confirms, system notifies password changed, exit conditions include password modified or invalid data case invoked if password under 8 characters or incorrect old password or service unavailable case called, administrator must be authenticated in the system.",
            "score": 0.8251581728458405,
            "correct": false
        },
        {
            "DbRichiesta": "- submit request, allow citizen to submit a new administrative request, citizen. citizen selects request type (change of residence, family status update), system displays submission form, citizen enters required details and confirms submission, system stores request with pending status, exit conditions include successful submission or system error invoking service unavailable use case, request type must be valid, citizen must be authenticated in system.\n- view citizen requests, allow citizen to view their submitted requests, citizen. citizen accesses request list, system retrieves and displays all requests sorted by submission date, citizen selects request to view details, system shows request status and related document, exit when citizen exits view, citizen must be authenticated and have existing requests.\n- filter requests by status, allow employee to filter citizen requests by current status, employee. employee selects status filter (pending, approved, rejected), system retrieves and displays matching requests sorted by date, employee views list for processing, exit when employee selects another action, employee must have valid system access permissions.\n- update request status, allow employee to modify request processing status, employee. employee selects target request, system displays current status, employee updates to new status (e.g., approved), system confirms status change, exit conditions include successful update or invalid status transition error, employee must have authorization to modify requests.\n- delete request, allow administrator to remove invalid requests from system, administrator. administrator locates target request via search, system displays request details, administrator confirms deletion, system removes request record, exit when deletion completes, administrator must have higher privilege level than standard employees.\n- retrieve request details, allow employee to access full request information, employee. employee searches request by id, system displays complete record including requester data and attached documents, employee reviews information for processing, exit when employee closes detail view, request id must exist in system database.\n- handle database errors, manage persistence layer failures during request operations, system. system detects database connection/query failure during crud operations, displays service unavailable message, rolls back transaction, exit when error message displays, applies to all request management use cases requiring data persistence.",
            "EA86": "request authorizations, allow citizen to request authorizations through certificate release area, citizen, employee. citizen accesses certificate and authorization release area via dedicated link, system displays data entry form, citizen inputs required data, system validates data and shows summary or triggers incorrect data use case, citizen confirms, system displays printable form, system notifies responsible employee, citizen prints form for municipal office submission with stamp and attachments, citizen must be authenticated in the system, exit conditions include system displaying form, sending notification, invoking incorrect data or service unavailable use cases for errors or technical failures.",
            "score": 0.8241204619407654,
            "correct": false
        },
        {
            "DbImpiegato": "- register employee, allow administrator to add new employee records, administrator. administrator accesses employee registration form, enters employee details (name, surname, email, matricola, login), system validates and stores data, administrator must ensure unique matricola and valid login credentials, exit conditions include successful registration or error for duplicate entries.\n- delete employee record, allow administrator to remove employee from system, administrator. administrator selects employee via matricola, system verifies identity, removes employee data, exit when deletion confirmed or error occurs for invalid matricola.\n- search employee by name, allow employee to find colleagues via name criteria, employee. employee enters name and surname in search form, system returns matching records, exit when results displayed or no matches found.\n- view employee details, allow employee to access colleague profiles, employee. employee selects colleague via matricola/login, system displays full profile (name, surname, email, credentials), exit when data appears or invalid identifier error occurs.\n- modify employee information, allow administrator to update employee data, administrator. administrator selects target employee, edits fields (matricola, email, login), system validates changes and updates records, exit when changes saved or error occurs for invalid formats.",
            "EA12": "modify administrator email, allow administrator to update their email address, administrator. administrator accesses email modification form, system displays new email entry form, administrator enters new email and confirms, system updates email, administrator must be authenticated in the system, exit conditions include system saving new email, detecting error invoking invalid data use case, or service unavailable invoking service unavailable use case.",
            "score": 0.8238589942455292,
            "correct": false
        },
        {
            "ImpiegatoManager": "- modify employee data, allow administrator to update employee information, administrator. administrator selects employee by employee id, system displays current data, administrator edits data fields and confirms changes, system updates employee record, employee id must exist in system.  \n- search employee by id, allow administrator to retrieve employee details via unique identifier, administrator. administrator enters employee id in search form, system displays employee information, employee must be registered in system.  \n- insert employee, allow administrator to register new employee into system, administrator. administrator navigates to employee creation form, enters employee details (name, surname, id), submits data, system stores new employee record, employee id must be unique.  \n- delete employee, allow administrator to remove employee from system, administrator. administrator selects employee by id, confirms deletion request, system removes employee record, employee must exist in system.  \n- search employees by name, allow administrator to find employees via name criteria, administrator. administrator inputs employee name and surname, system returns matching employee records, at least one search parameter must be provided.  \n- list employees, allow administrator to view all registered employees, administrator. administrator accesses employee directory, system displays complete employee list sorted alphabetically.",
            "EA24": "search employee, allow administrator to search for an employee, administrator. press employee search button, system displays search form, administrator performs search via employee data, system returns searched employee data, employee id string must be present in system containing only numeric characters with 6-digit length, administrator must be authenticated in the system, exit conditions include displaying employee screen, invoking incorrect data use case if employee not found, calling delete employee or modify employee use cases if requested, handling service unavailable via service unavailable use case.",
            "score": 0.8236670911312103,
            "correct": false
        },
        {
            "ServletRegistraCittadino": "- citizen registration, allow citizen to register into the system, citizen. citizen accesses registration form, system displays data entry fields (name, surname, email, identity card number, tax code, login, password), citizen submits form, system checks identity card existence and login availability, system validates data consistency with existing records, system confirms registration, exit conditions include successful registration or error due to existing login or invalid identity card, identity card number must exist in system, login must be unique with [a-za-z0-9._-] characters under 30 length, personal data must match identity card records.\n- identity card validation, verify citizen's identity document during registration, citizen. system checks identity card number against municipal database, system confirms document validity, exit when validation succeeds or fails, extends citizen registration use case, identity card number must be registered in municipality database.\n- login uniqueness check, ensure citizen's login credentials are unique, citizen. system verifies login availability during registration, system blocks duplicate logins, exit when login availability confirmed or denied, extends citizen registration use case, login must not exist in system before registration.\n- personal data consistency, validate citizen's input against official records, citizen. system compares entered name/surname/tax code with identity card database, system rejects mismatched information, exit when data matches or shows inconsistency error, extends citizen registration use case, tax code must correspond to identity card holder's data.",
            "EA65": "register youth card, allow citizen to register for a youth card, citizen. citizen requests youth card registration, system displays submission form, citizen enters card request data, system verifies data and submits request, system confirms card registration and displays card number with data summary, entry requires citizen authentication, exit conditions include system displaying summary form, service error invoking service unavailable, incorrect data invoking incorrect data, citizen cancellation invoking card cancelled.",
            "score": 0.8205054521560669,
            "correct": false
        },
        {
            "ServletModificaImpiegato": "- modify employee personal information, allow administrator to update employee's personal details, administrator. administrator accesses employee modification form, system displays employee search by id, administrator enters valid employee id and submits, system retrieves employee data and displays edit form, administrator modifies details (name, surname, email) and confirms, system saves updated information, administrator must be authenticated, exit conditions include successful update or error if invalid employee id.  \n- update employee access credentials, allow administrator to change employee's login credentials, administrator. administrator selects employee via valid id search, system displays current login/password fields, administrator enters new credentials and confirms, system verifies format and updates records, exit when credentials modified or error if password violates length/special character rules.  \n- employee search by id, enable administrator to locate employee records, administrator. administrator initiates employee modification process, system requires valid employee id input, administrator enters id and submits search, system verifies id existence and retrieves data, invalid id triggers error notification.  \n- handle modification errors, manage database exceptions during employee updates, administrator. system detects database errors during save operation, displays service unavailable message, administrator returns to employee management dashboard, extends modification use cases with error recovery path.",
            "EA12": "modify administrator email, allow administrator to update their email address, administrator. administrator accesses email modification form, system displays new email entry form, administrator enters new email and confirms, system updates email, administrator must be authenticated in the system, exit conditions include system saving new email, detecting error invoking invalid data use case, or service unavailable invoking service unavailable use case.",
            "score": 0.8199815511703491,
            "correct": false
        },
        {
            "ServletRicercaAmministratore": "- search administrator, allow administrator to search for another administrator by id, administrator. administrator accesses search function, system displays search form, administrator enters administrator id and submits, system retrieves and displays administrator details, exit conditions include displaying details or invoking invalid data use case if id not found, administrator must be authenticated in the system.  \n- invalid administrator id, handle non-existent administrator id during search, administrator. system displays error message indicating id not found, administrator reads notification, system returns to search form, exit when form is redisplayed, extends search administrator use case to handle invalid id.  \n- unauthenticated access prevention, redirect unauthenticated users to login page when accessing administrator search, administrator. user attempts to access administrator search without valid session, system redirects to login page, exit when login page is displayed, user must have active session for administrator functions.",
            "EA24": "search employee, allow administrator to search for an employee, administrator. press employee search button, system displays search form, administrator performs search via employee data, system returns searched employee data, employee id string must be present in system containing only numeric characters with 6-digit length, administrator must be authenticated in the system, exit conditions include displaying employee screen, invoking incorrect data use case if employee not found, calling delete employee or modify employee use cases if requested, handling service unavailable via service unavailable use case.",
            "score": 0.8188408434391021,
            "correct": false
        },
        {
            "Richiesta": "- submit request, allow citizen to submit a formal request or application, citizen. citizen selects request type (application, certificate), system displays submission form, citizen enters required data and confirms, system creates request with pending status, citizen must be authenticated in the system, exit conditions include system storing request with generated id or invoking incorrect data use case for invalid input, request type must be valid (application types: identity card, family status, change of residence), date must be in dd/mm/yyyy format.  \n- view request status, allow citizen to check current status of submitted requests, citizen. citizen accesses request tracking section, system displays list of citizen's requests with status (accepted, refused, pending), citizen selects specific request, system shows detailed status information and document link if available, exit when citizen reviews status or service unavailable case invoked, citizen must own the requested application.  \n- process request, allow employee to update request status and attach documents, employee. employee accesses request management interface, system displays pending requests list, employee selects request and reviews data, employee sets new status (accepted/refused) and uploads document if required, system updates request and notifies citizen, employee must have valid permissions, exit conditions include status updated with timestamp or incorrect data case invoked for invalid document format.  \n- cancel request, allow citizen to withdraw pending requests, citizen. citizen views active requests list, citizen selects pending request and chooses cancel option, system confirms cancellation and updates status to withdrawn, exit when request is canceled or service unavailable case invoked, cancellation only allowed if status is pending.",
            "EA35": "marriage request, allow citizen to submit marriage request processed by employee, citizen, employee. citizen presses marriage request button, system displays form, citizen enters personal and partner data and confirms, system generates document with self-certification and family status sends to employee, employee receives notification and publishes request, exit conditions include system creating document for competent office or invoking service unavailable use case when service unavailable, citizen must be authenticated in system.",
            "score": 0.8176315307617188,
            "correct": false
        },
        {
            "ServletEliminaImpiegato": "- delete employee, allow administrator to remove an employee from the system, administrator. administrator enters employee identification number, system verifies employee existence, administrator confirms deletion request, system removes employee record and associated access credentials, administrator must be authenticated in the system, exit conditions include successful deletion or invalid employee id invoking incorrect data use case. employee identification number must exist in system records.",
            "EA72": "delete information, allows employee to delete a news item, employee. employee requests news deletion, system displays existing news list, employee selects news, system shows confirmation form, employee confirms via form, system processes form and deletes news data, exit conditions include system completing deletion or invoking service unavailable use case on error, employee must be authenticated.",
            "score": 0.8155569970607758,
            "correct": false
        },
        {
            "AdminManager": "- modify administrator data, allow administrator to update administrator details, administrator. administrator accesses administrator modification form, system displays data entry fields, administrator enters new details and submits, system updates administrator record, administrator must have system access, exit conditions include successful update or error if administrator is only remaining, administrator cannot delete last existing administrator.\n- search administrator, allow administrator to find administrator by name, administrator. administrator accesses search function, system displays name entry fields, administrator enters name and submits, system displays matching administrators, exit when results are displayed or none found, administrator must be authenticated in system.\n- insert administrator, allow administrator to add new administrator, administrator. administrator accesses insertion form, system displays data entry fields, administrator enters required data and submits, system saves new administrator, exit conditions include successful insertion or error if data invalid, new administrator must have unique matricola and login.\n- delete administrator, allow administrator to remove administrator, administrator. administrator selects administrator to delete and confirms, system removes administrator record, exit conditions include successful deletion or error if last administrator, system must retain at least one administrator.",
            "EA15": "modify employee, allow administrator to modify an employee, administrator. press employee edit button, system shows edit form, administrator enters data, system saves changes, handle service unavailable by invoking service unavailable use case, administrator must be authenticated in the system, includes search employee use case when administrator wants to modify an employee.",
            "score": 0.8148844718933106,
            "correct": false
        },
        {
            "ImpiegatoManager": "- modify employee data, allow administrator to update employee information, administrator. administrator selects employee by employee id, system displays current data, administrator edits data fields and confirms changes, system updates employee record, employee id must exist in system.  \n- search employee by id, allow administrator to retrieve employee details via unique identifier, administrator. administrator enters employee id in search form, system displays employee information, employee must be registered in system.  \n- insert employee, allow administrator to register new employee into system, administrator. administrator navigates to employee creation form, enters employee details (name, surname, id), submits data, system stores new employee record, employee id must be unique.  \n- delete employee, allow administrator to remove employee from system, administrator. administrator selects employee by id, confirms deletion request, system removes employee record, employee must exist in system.  \n- search employees by name, allow administrator to find employees via name criteria, administrator. administrator inputs employee name and surname, system returns matching employee records, at least one search parameter must be provided.  \n- list employees, allow administrator to view all registered employees, administrator. administrator accesses employee directory, system displays complete employee list sorted alphabetically.",
            "EA78": "modify information, allow employee to modify a news information, employee. employee requests news modification, system displays existing news list, employee selects news, system displays edit form, employee enters news data in form, system receives form and updates news data, handle errors by invoking service unavailable use case, employee must be authenticated in the system.",
            "score": 0.8148236095905304,
            "correct": false
        }
    ],
    "fn": [
        {
            "ServletVisualizzaPratiche": "- view applications, allow employee to view all submitted applications, employee. employee accesses application list, system retrieves and displays list of applications, employee scrolls through list to inspect application details, exit when list is displayed or service unavailable invoking service unavailable use case, employee must have system access.",
            "EA28": "delete application, allow citizen to delete an application, citizen. press application deletion button for identity card or change of residence if not initialized, system requests confirmation, citizen confirms, system deletes application, citizen must be authenticated in the system, extends view application use case, exit conditions include citizen not confirming or system deleting application or invoking service unavailable use case.",
            "score": 0.46129890978336335,
            "correct": true
        },
        {
            "ServletRisposta": "- change of residence, allow citizen to declare residence change with family unit details, citizen. citizen accesses residence change form, system displays data entry fields for old and new address, family members, and occupancy status, citizen enters data and submits, system generates pdf declaration, citizen must be authenticated, exit conditions include system storing declaration as pending request, invoking incorrect data use case if mandatory fields missing or invalid dates, invoking service unavailable use case if pdf generation fails. surname must be [a-zàéèìòù'] uppercase, name same as surname, birth city same characters, birth date valid dd/mm/yyyy, new address same characters, new municipality same characters, family members require name, surname, birth details, occupancy status must be specified.\n- declare third party occupants, allow citizen to list occupants in new residence, citizen. citizen selects occupied residence option, system displays occupant entry form, citizen enters occupant names and relationships, system includes occupants in declaration, exit conditions include system saving occupant details or invoking incorrect data use case if occupant names invalid, citizen must declare occupancy status as occupied. occupant names must be [a-zàéèìòù'] uppercase, minimum 1 character, relationship must be specified.\n- incorrect data, handle incorrect input exceptions by redisplaying form, citizen. system displays error message indicating incorrect request, citizen reads notification message, system redisplays input form, exit when form is redisplayed, extends other use cases to handle input error failures.",
            "EA24": "search employee, allow administrator to search for an employee, administrator. press employee search button, system displays search form, administrator performs search via employee data, system returns searched employee data, employee id string must be present in system containing only numeric characters with 6-digit length, administrator must be authenticated in the system, exit conditions include displaying employee screen, invoking incorrect data use case if employee not found, calling delete employee or modify employee use cases if requested, handling service unavailable via service unavailable use case.",
            "score": 0.46032845973968506,
            "correct": true
        },
        {
            "AccessManager": "- register user access, allow administrator to create new system user, administrator. administrator navigates to user registration form, enters login, password, and type, system validates login uniqueness and creates access, exit conditions include access created or duplicate login error, login must be unique and conform to [a-za-z0-9._-] characters under 30 length.  \n- modify user access, allow administrator to update user credentials, administrator. administrator selects user from list, modifies login/password/type fields, system validates new data and updates access record, exit conditions include access modified or invalid format error, new login must follow [a-za-z0-9._-] format.  \n- delete user access, allow administrator to remove user from system, administrator. administrator selects target user, confirms deletion action, system deletes access record, exit conditions include access removed or dependency conflict error preventing deletion.  \n- check login existence, validate login uniqueness during registration, administrator. system verifies proposed login against existing records during user creation, administrator receives availability status, exit condition is unique login confirmed or duplicate error triggered.  \n- retrieve access details, allow administrator to view user access information, administrator. administrator searches user by login, system displays associated access type and credentials, exit condition is details shown or invalid login error.  \n- list all accesses, enable administrator to view registered system users, administrator. administrator requests full access list, system retrieves and displays all logins with types, exit condition is list displayed or empty database message.  \n- verify credentials, authenticate users during login process, user. system compares input login/password with stored access records, grants session upon match, exit conditions include successful login or invalid credentials error.",
            "EA138": "incorrect data, handle incorrect input exceptions by redisplaying form, citizen. system displays error message indicating incorrect request, citizen reads notification message, system redisplays input form, exit when form is redisplayed, extends other use cases to handle input error failures.",
            "score": 0.45602174699306486,
            "correct": true
        },
        {
            "DbImpiegato": "- register employee, allow administrator to add new employee records, administrator. administrator accesses employee registration form, enters employee details (name, surname, email, matricola, login), system validates and stores data, administrator must ensure unique matricola and valid login credentials, exit conditions include successful registration or error for duplicate entries.\n- delete employee record, allow administrator to remove employee from system, administrator. administrator selects employee via matricola, system verifies identity, removes employee data, exit when deletion confirmed or error occurs for invalid matricola.\n- search employee by name, allow employee to find colleagues via name criteria, employee. employee enters name and surname in search form, system returns matching records, exit when results displayed or no matches found.\n- view employee details, allow employee to access colleague profiles, employee. employee selects colleague via matricola/login, system displays full profile (name, surname, email, credentials), exit when data appears or invalid identifier error occurs.\n- modify employee information, allow administrator to update employee data, administrator. administrator selects target employee, edits fields (matricola, email, login), system validates changes and updates records, exit when changes saved or error occurs for invalid formats.",
            "EA23": "register citizen, allow citizen to register in the system, citizen. citizen accesses registration form, system displays form, citizen enters data and confirms, system verifies data correctness, saves data and sends registration email, handle invalid data by invoking invalid data use case, handle service unavailable by invoking service unavailable use case, citizen must have system access. name string matches identity card holder, well-formed with [a-za-z'àéèìòù], length <30, not empty. surname string matches identity card holder, well-formed with [a-za-z'àéèìòù], length <30, not empty. fiscal code string complies with regulations, 16 characters. identity card string exists in system, format xxnnnnnnn, 9 characters. email string format x@x.x, length <31, not empty. username string unique, well-formed with [a-za-z0-9.-_], length <30, not empty. password string well-formed with [a-za-z0-9.-_*+!?,:;àèéìòù], length 8-15.",
            "score": 0.4553689271211624,
            "correct": true
        },
        {
            "ServletMostraAccesso": "- view access details, allow administrator and employee to view their access credentials, administrator and employee. user navigates to access details section, system retrieves stored login information from database, system displays login details on interface, user must have active authentication session, exit conditions include successful credential display or database error invoking service unavailable use case.",
            "EA138": "incorrect data, handle incorrect input exceptions by redisplaying form, citizen. system displays error message indicating incorrect request, citizen reads notification message, system redisplays input form, exit when form is redisplayed, extends other use cases to handle input error failures.",
            "score": 0.4552977919578552,
            "correct": true
        },
        {
            "ServletCreaPdfCambioAbitazione": "- declare residence change, allow citizen to declare change of residence, citizen. citizen accesses residence change form, system displays data entry fields for new address and family unit details, citizen submits declaration, system generates official pdf document with declared information, citizen must provide valid identity document and authenticate in the system, exit conditions include system generating pdf or invoking incorrect data use case if required fields missing, new address must follow [a-zàèéìòù' .] characters with minimum 1 character length, civic number must be numeric 1-5 digits.  \n- update family unit composition, enable citizen to specify family members moving together, citizen. citizen lists family members in declaration form including parentage relations, system validates family status consistency, system records updated family unit data, exit when family member table appears in generated pdf, family member names must use [a-zàèéìòù' .] characters with 1-30 length, birth dates require valid dd/mm/yyyy format.  \n- remove citizen record, handle citizen relocation outside municipality, employee. system detects residence change to external municipality, employee verifies relocation authenticity, system deletes citizen access and family unit records, exit when citizen data removed from database, requires municipal police confirmation of address validity.  \n- validate property occupancy, ensure declared residence occupancy compliance, employee. system cross-checks property ownership/rental status with municipal registry, employee confirms occupancy legitimacy through police municipal report, exit when pdf includes authorized officer's disposition statement, rental properties require active contract registration in municipal archive.",
            "EA24": "search employee, allow administrator to search for an employee, administrator. press employee search button, system displays search form, administrator performs search via employee data, system returns searched employee data, employee id string must be present in system containing only numeric characters with 6-digit length, administrator must be authenticated in the system, exit conditions include displaying employee screen, invoking incorrect data use case if employee not found, calling delete employee or modify employee use cases if requested, handling service unavailable via service unavailable use case.",
            "score": 0.4538505584001541,
            "correct": true
        },
        {
            "DbAccesso": "- register access, allow administrator to create new system access credentials, administrator. administrator navigates to access registration, system displays form, administrator enters login, password, and user type, system checks login uniqueness and saves credentials, exit conditions include access created or existing login error, login must be unique and follow [a-za-z0-9._-] format with maximum 30 characters, password must comply with [a-za-z0-9._-*+!?,:;àèéìòù] format between 8-15 characters.  \n- delete access, allow administrator to remove user system access, administrator. administrator selects target user login, system confirms deletion request, administrator confirms action, system removes access credentials, exit conditions include access removed or service error, administrator must have valid permissions.  \n- verify credentials, authenticate user login attempts, citizen/employee/administrator. user enters login and password during authentication, system checks credentials against stored data, grants access if valid, exit conditions include successful login or invalid credentials error.  \n- check login existence, validate login uniqueness during registration, citizen/employee/administrator. user enters desired login, system verifies database for existing matches, returns availability status, exit conditions include unique login confirmation or duplicate error.  \n- modify access credentials, allow users to update login/password, citizen/employee/administrator. user navigates to profile settings, edits login/password fields, system validates new credentials and updates database, exit conditions include updated credentials or invalid format error, new login must be unique if changed.  \n- retrieve access details, allow administrators to view user access information, administrator. administrator searches target user login, system displays associated credentials and user type, exit conditions include data retrieval or invalid user error.  \n- list all accesses, enable administrators to view all registered system users, administrator. administrator requests full access list, system displays logins with types, exit conditions include complete list display or database error.",
            "EA138": "incorrect data, handle incorrect input exceptions by redisplaying form, citizen. system displays error message indicating incorrect request, citizen reads notification message, system redisplays input form, exit when form is redisplayed, extends other use cases to handle input error failures.",
            "score": 0.45371330976486207,
            "correct": true
        },
        {
            "Cittadino": "- citizen registration, allow citizen to register in the system, citizen. citizen accesses registration form, system displays personal data entry fields (tax code, surname, name, birth date, birth place, email), citizen submits data, system stores citizen profile, citizen must provide valid tax code and birth details, exit conditions include successful registration or invalid data invoking error handling.  \n- update citizen profile, allow citizen to modify personal information, citizen. citizen accesses profile management, system displays editable fields (email, communication preferences), citizen updates data and confirms, system saves changes, citizen must be authenticated, exit conditions include profile updated or service unavailable error.  \n- manage family unit association, allow citizen to link to family unit, citizen. citizen accesses family unit section, system displays current association or input form, citizen enters family unit identifier, system validates and links citizen, exit conditions include successful linkage or invalid family unit invoking error handling.  \n- communication preference management, allow citizen to set advertisement subscription, citizen. citizen accesses settings, system displays subscription toggle, citizen enables/disables preference, system updates subscription status, exit conditions include preference saved or service error.",
            "EA24": "search employee, allow administrator to search for an employee, administrator. press employee search button, system displays search form, administrator performs search via employee data, system returns searched employee data, employee id string must be present in system containing only numeric characters with 6-digit length, administrator must be authenticated in the system, exit conditions include displaying employee screen, invoking incorrect data use case if employee not found, calling delete employee or modify employee use cases if requested, handling service unavailable via service unavailable use case.",
            "score": 0.44293679893016813,
            "correct": true
        },
        {
            "ServletVisualizzaPratiche": "- view applications, allow employee to view all submitted applications, employee. employee accesses application list, system retrieves and displays list of applications, employee scrolls through list to inspect application details, exit when list is displayed or service unavailable invoking service unavailable use case, employee must have system access.",
            "EA138": "incorrect data, handle incorrect input exceptions by redisplaying form, citizen. system displays error message indicating incorrect request, citizen reads notification message, system redisplays input form, exit when form is redisplayed, extends other use cases to handle input error failures.",
            "score": 0.4425607532262802,
            "correct": true
        },
        {
            "DbAmministratore": "- register administrator, allow administrator to add new administrator to the system, administrator. administrator accesses registration form, system displays input fields for matricola, name, surname, email, and login, administrator enters data and submits, system checks for unique matricola and login, creates new administrator record, exit conditions include successful registration or error due to duplicate matricola/login, matricola must be unique and non-empty, login must be unique and exist in access credentials.\n\n- remove administrator, allow administrator to delete administrator records, administrator. administrator selects administrator to delete, system verifies no active references, removes administrator from database, exit conditions include successful deletion or error if administrator has linked records, administrator must exist in the system and have no associated active data.\n\n- view administrator by name, allow administrator to search administrators by name and surname, administrator. administrator enters name and surname in search form, system returns matching administrator records, exit when results display or no matches found, name and surname must be non-empty and exist in system records.\n\n- view administrator by matriculation, allow administrator to retrieve administrator details using matricola, administrator. administrator inputs matricola, system displays full administrator profile, exit when profile displays or invalid matricola error occurs, matricola must exist in the system and follow format rules.\n\n- view all administrators, allow administrator to list all registered administrators, administrator. administrator accesses administrator management section, system displays complete list of administrators with key details, exit when list displays or empty database notification occurs.\n\n- view administrator by login, allow administrator to find administrator via login credentials, administrator. administrator enters login identifier, system returns corresponding administrator data, exit when data displays or invalid login error occurs, login must exist in system and be associated with administrator role.\n\n- modify administrator details, allow administrator to update administrator information, administrator. administrator selects administrator and edits fields (matricola, name, surname, email, login), system validates new data uniqueness, updates database record, exit conditions include successful update or error from duplicate matricola/login/invalid format, all fields must comply with format rules and maintain referential integrity.",
            "EA138": "incorrect data, handle incorrect input exceptions by redisplaying form, citizen. system displays error message indicating incorrect request, citizen reads notification message, system redisplays input form, exit when form is redisplayed, extends other use cases to handle input error failures.",
            "score": 0.43777440786361693,
            "correct": true
        },
        {
            "DbNucleoFamiliare": "- create family unit, allow employee to register a new family unit in the system, employee. employee initiates family unit registration, system displays entry form for head member id and notes, employee submits data, system stores new family unit, exit conditions include successful registration or error handling for invalid head id, family head must exist in system and have valid citizen id.  \n- delete family unit, allow employee to remove family unit records, employee. employee selects target family unit id, system verifies existence, employee confirms deletion, system removes family unit data, exit when deletion completes or invalid id invokes error case, family unit must exist and have no active linked services.  \n- view family status, allow citizen or employee to display family member details, employee/citizen. user requests family status via id, system retrieves and lists all members with personal data, exit conditions include displaying member list or handling non-existent family unit error.  \n- verify family unit existence, ensure family unit id validity before operations, employee. system checks database for id presence during processes like deletion/modification, returns confirmation status, extends other use cases to prevent invalid id usage.  \n- update family head, allow employee to modify family unit leadership, employee. employee accesses family unit management, selects new head member id, system validates new head's citizenship status, updates database records, exit conditions include successful update or error for invalid member id.  \n- modify family member count, allow employee to adjust registered family size, employee. employee enters new component number for specific family unit, system validates number consistency with actual members, updates database, exit when count matches registered members or triggers inconsistency error.  \n- retrieve family unit notes, enable employee to access administrative annotations, employee. employee selects family unit id, system displays stored notes field, allows note review for case management, requires valid family unit id.",
            "EA22": "register citizen, allow citizen to register in the system, citizen. citizen accesses registration form, system displays registration form, citizen enters data and confirms, system verifies data correctness, saves data and sends registration email to citizen, entry condition: citizen has accessed the system, exit conditions: system registers citizen or invalid data invoking invalid data use case or service unavailable invoking service unavailable use case, quality requirements: name string matches identity card holder's name with [a-za-z'àéèìòù], length <30, not empty, surname string matches identity card holder's surname with [a-za-z'àéèìòù], length <30, not empty, fiscal code string complies with regulations and 16 characters, identity card string exists in system as xxnnnnnnn format (9 characters), email string follows x@x.x format, length <31, not empty, username not existing in system, contains [a-za-z0-9.-_], length <30, not empty, password contains [a-za-z0-9.-_*+!?,:;àèéìòù], length 8-15.",
            "score": 0.4365341186523437,
            "correct": true
        },
        {
            "DbImpiegato": "- register employee, allow administrator to add new employee records, administrator. administrator accesses employee registration form, enters employee details (name, surname, email, matricola, login), system validates and stores data, administrator must ensure unique matricola and valid login credentials, exit conditions include successful registration or error for duplicate entries.\n- delete employee record, allow administrator to remove employee from system, administrator. administrator selects employee via matricola, system verifies identity, removes employee data, exit when deletion confirmed or error occurs for invalid matricola.\n- search employee by name, allow employee to find colleagues via name criteria, employee. employee enters name and surname in search form, system returns matching records, exit when results displayed or no matches found.\n- view employee details, allow employee to access colleague profiles, employee. employee selects colleague via matricola/login, system displays full profile (name, surname, email, credentials), exit when data appears or invalid identifier error occurs.\n- modify employee information, allow administrator to update employee data, administrator. administrator selects target employee, edits fields (matricola, email, login), system validates changes and updates records, exit when changes saved or error occurs for invalid formats.",
            "EA138": "incorrect data, handle incorrect input exceptions by redisplaying form, citizen. system displays error message indicating incorrect request, citizen reads notification message, system redisplays input form, exit when form is redisplayed, extends other use cases to handle input error failures.",
            "score": 0.4347692340612411,
            "correct": true
        },
        {
            "ServletCreaPdfCittadino": "- declare residence change, allow citizen to submit change of residence declaration, citizen. citizen accesses residence change form, enters personal data, previous and new address details, system generates pdf declaration, citizen must provide valid identity data and family member details, exit conditions include pdf generation or error due to invalid input, name and surname must contain [a-z, àèéìòù] with length 1-30, birth date in dd/mm/yyyy format, addresses must have valid municipality names and street formats.  \n- declare family status, allow citizen to declare family unit composition during residence change, citizen. citizen lists family members with names, birthplaces, and birth dates, system includes family data in residence declaration pdf, family members must be valid with correctly formatted data, parentela fields require valid kinship terms.  \n- specify occupancy status, allow citizen to indicate new residence occupancy status, citizen. citizen selects if residence is free or occupied, if occupied enters occupant details, system adds occupancy information to pdf, occupants' names and surnames must follow [a-z, àèéìòù] format, relationship to declarant must be specified if applicable.  \n- incorrect data, handle invalid input during residence declaration, citizen. system redisplays form with error messages for invalid fields, citizen corrects entries and resubmits, exit when valid submission occurs, extends residence change use case.",
            "EA24": "search employee, allow administrator to search for an employee, administrator. press employee search button, system displays search form, administrator performs search via employee data, system returns searched employee data, employee id string must be present in system containing only numeric characters with 6-digit length, administrator must be authenticated in the system, exit conditions include displaying employee screen, invoking incorrect data use case if employee not found, calling delete employee or modify employee use cases if requested, handling service unavailable via service unavailable use case.",
            "score": 0.43424315154552456,
            "correct": true
        },
        {
            "ControllerFiles": "- upload change of residence request documents, allow employee to upload supporting documents for residence change requests, employee. employee selects document upload function, system displays upload form, employee enters document description and selects file, system validates file type and size, employee confirms upload, system saves document to residence change request folder, exit conditions include successful upload or invalid file type/size invoking invalid data use case, maximum file size 500mb, supported file types determined by system mime types.  \n- invalid file upload, handle invalid file upload exceptions by redisplaying form, employee. system detects invalid file type or size exceeding limit, displays error message, employee reviews error and retries upload, exit when form is redisplayed with error notification, extends upload change of residence request documents use case.",
            "EA34": "request third party certificates, allow citizen to request certificates for third parties, citizen. citizen selects specific certificate (civil status certificates, registry certificates), system displays data entry form for subject person, citizen enters subject's data (see note), system stores citizen and subject data in dedicated module, system displays requested certificate screen, citizen selects payment and delivery method, system sends certificate, citizen must be authenticated in system, exit conditions include system sending certificate or invoking service unavailable use case, if citizen is not close relative of subject must specify valid request reason.",
            "score": 0.4331081032752991,
            "correct": true
        },
        {
            "AdminManager": "- modify administrator data, allow administrator to update administrator details, administrator. administrator accesses administrator modification form, system displays data entry fields, administrator enters new details and submits, system updates administrator record, administrator must have system access, exit conditions include successful update or error if administrator is only remaining, administrator cannot delete last existing administrator.\n- search administrator, allow administrator to find administrator by name, administrator. administrator accesses search function, system displays name entry fields, administrator enters name and submits, system displays matching administrators, exit when results are displayed or none found, administrator must be authenticated in system.\n- insert administrator, allow administrator to add new administrator, administrator. administrator accesses insertion form, system displays data entry fields, administrator enters required data and submits, system saves new administrator, exit conditions include successful insertion or error if data invalid, new administrator must have unique matricola and login.\n- delete administrator, allow administrator to remove administrator, administrator. administrator selects administrator to delete and confirms, system removes administrator record, exit conditions include successful deletion or error if last administrator, system must retain at least one administrator.",
            "EA2": "authenticate citizen, allow citizen to log in handling incorrect data and service unavailability, citizen. citizen accesses authentication session, system displays login form, citizen enters credentials and submits, system verifies and grants access, handle incorrect data by invoking incorrect data use case, handle service unavailable by invoking service unavailable use case, username must exist in system with [a-za-z0-9.-_] characters and length <30, password must exist in system with [a-za-z0-9.-_*+!?,:;àèéìòù] characters and length 8-15.",
            "score": 0.42759969234466555,
            "correct": true
        },
        {
            "ServletStatoDiFamiglia": "- view family status, allow citizen to view their family unit composition, citizen. citizen accesses family status section, system requests family unit id, citizen provides id, system retrieves and displays family members list, exit conditions include family members list displayed or invalid id invoking invalid data use case, family unit id must exist in system and be valid.",
            "EA24": "search employee, allow administrator to search for an employee, administrator. press employee search button, system displays search form, administrator performs search via employee data, system returns searched employee data, employee id string must be present in system containing only numeric characters with 6-digit length, administrator must be authenticated in the system, exit conditions include displaying employee screen, invoking incorrect data use case if employee not found, calling delete employee or modify employee use cases if requested, handling service unavailable via service unavailable use case.",
            "score": 0.42585155963897703,
            "correct": true
        },
        {
            "DbCambioResidenza": "- update residence, allow citizen to change residence address within the same municipality, citizen. citizen submits new address details, system updates identity card with new address, citizen must have valid identity card, exit conditions include system updating address or invalid identity card number invoking incorrect data use case, new address must include valid street name and civic number.  \n- delete identity card, allow system to delete identity card when citizen changes residence to external municipality, administrator. system detects external municipality change, system deletes citizen's identity card, exit conditions include identity card deletion or service unavailable invoking service unavailable use case, citizen must have valid identity card registered in the system.  \n- modify residence data, allow system to update residence information in identity card, employee. employee accesses residence modification function, system retrieves identity card data, employee enters new residence details and confirms, system updates identity card, exit conditions include data updated or invalid input invoking incorrect data use case, new residence must have valid street name and numeric civic number.",
            "EA24": "search employee, allow administrator to search for an employee, administrator. press employee search button, system displays search form, administrator performs search via employee data, system returns searched employee data, employee id string must be present in system containing only numeric characters with 6-digit length, administrator must be authenticated in the system, exit conditions include displaying employee screen, invoking incorrect data use case if employee not found, calling delete employee or modify employee use cases if requested, handling service unavailable via service unavailable use case.",
            "score": 0.41371112167835233,
            "correct": true
        },
        {
            "NucleoFamiliare": "- create family unit record, allow employee to create a new family unit record, employee. employee accesses family unit creation form, system displays input fields for head of family and notes, employee enters data and submits, system stores new family unit, exit conditions include successful creation or error invoking invalid data use case, head of family must be valid citizen id, notes can contain [a-z, àèéìòù, 0-9, .,;:!?] with maximum 255 characters.  \n- modify family unit details, allow employee to update family unit information, employee. employee selects existing family unit, system displays current details, employee modifies head of family or notes then confirms, system updates record, exit when changes saved or error occurs, family unit must exist in system before modification.  \n- view family composition, allow employee to view family unit member details, employee. employee searches for family unit by id, system displays head of family and number of members, employee can request detailed member list, system shows complete family composition, family unit must be registered in system.  \n- update family member count, allow employee to adjust registered family members quantity, employee. employee accesses family unit management, selects target family, modifies member count field, system validates and updates total, member count must be positive integer matching actual registered members.",
            "EA4": "delete citizen, allows employee to delete a citizen, employee. employee presses delete citizen button, system requests confirmation, employee confirms operation, system deletes citizen. employee must be authenticated in the system, includes search citizen use case when employee wants to delete citizen. exit conditions: employee does not confirm operation, system deletes citizen, or invokes service unavailable use case if service is unavailable.",
            "score": 0.39962616860866546,
            "correct": true
        },
        {
            "ControllerFiles": "- upload change of residence request documents, allow employee to upload supporting documents for residence change requests, employee. employee selects document upload function, system displays upload form, employee enters document description and selects file, system validates file type and size, employee confirms upload, system saves document to residence change request folder, exit conditions include successful upload or invalid file type/size invoking invalid data use case, maximum file size 500mb, supported file types determined by system mime types.  \n- invalid file upload, handle invalid file upload exceptions by redisplaying form, employee. system detects invalid file type or size exceeding limit, displays error message, employee reviews error and retries upload, exit when form is redisplayed with error notification, extends upload change of residence request documents use case.",
            "EA33": "request certificates, allow citizen to request certificates, citizen. citizen selects specific certificate (civil registry certificates, civil status certificates), system displays data entry form, citizen enters subject's data, system shows requested certificate, citizen selects payment and delivery method, system sends certificate, citizen must be authenticated in the system, exit conditions include system sending certificate or invoking incorrect data use case if person not found or service unavailable use case if service unavailable, surname can contain [a-z, a-z, ', àéèìòù] with length 1-30, name same as surname, birth place same characters with minimum length 1, birth province same characters minimum length 1, birth date must be real in dd/mm/yyyy numeric format (day 1-31, month 1-12, year 1900-current), residence can contain [a-z, a-z, ', àéèìòù, .] minimum length 1, residence province same characters minimum length 1, address same characters minimum length 1.",
            "score": 0.39702952206134795,
            "correct": true
        },
        {
            "Cittadino": "- citizen registration, allow citizen to register in the system, citizen. citizen accesses registration form, system displays personal data entry fields (tax code, surname, name, birth date, birth place, email), citizen submits data, system stores citizen profile, citizen must provide valid tax code and birth details, exit conditions include successful registration or invalid data invoking error handling.  \n- update citizen profile, allow citizen to modify personal information, citizen. citizen accesses profile management, system displays editable fields (email, communication preferences), citizen updates data and confirms, system saves changes, citizen must be authenticated, exit conditions include profile updated or service unavailable error.  \n- manage family unit association, allow citizen to link to family unit, citizen. citizen accesses family unit section, system displays current association or input form, citizen enters family unit identifier, system validates and links citizen, exit conditions include successful linkage or invalid family unit invoking error handling.  \n- communication preference management, allow citizen to set advertisement subscription, citizen. citizen accesses settings, system displays subscription toggle, citizen enables/disables preference, system updates subscription status, exit conditions include preference saved or service error.",
            "EA21": "employee password recovery, allow employee to recover password, employee. employee forgets password and presses recovery button, system displays form for entering employee id, employee enters id and confirms, system verifies data and sends password to email, handle incorrect data by invoking incorrect data use case or service unavailable by invoking service unavailable use case, employee must be authenticated in the system.",
            "score": 0.3959802180528641,
            "correct": true
        }
    ]
}